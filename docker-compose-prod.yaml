
x-services:
  devicehub: &devicehub
    build: .
    image: devicehub
    env_file:
      - scripts/variables.env
  mongo: &mongodb
    image: mongo:6.0.10
    entrypoint: ["mongod", "--replSet", "myReplicaSet", "--bind_ip_all"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
        #      start_interval: 1s
      retries: 33

services:
  nginx:
    image: "nginx:bookworm"
    container_name: devicehub-nginx
    volumes:
      - ./scripts/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "${STF_URL_PORT:-80}:80"
    depends_on:
      - devicehub-app
      - devicehub-websocket
      - devicehub-storage-temp
      - devicehub-storage-plugin-apk
      - devicehub-storage-plugin-image
      - devicehub-api
      - devicehub-auth
      - devicehub-swagger
    restart: unless-stopped
  mongo1:
    <<: *mongodb
    ports:
      - 27017:27017
  mongo2:
    <<: *mongodb
  mongo3:
    <<: *mongodb
  mongosetup:
    image: mongo:6.0.10
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - ./scripts/mongo_setup.sh:/scripts/mongo_setup.sh
    restart: "no"
    entrypoint: ["bash", "/scripts/mongo_setup.sh"]
  devicehub-migrate:
    <<: *devicehub
    command: stf migrate
    environment:
      - STF_ROOT_GROUP_NAME=Common
      - STF_ADMIN_NAME
      - STF_ADMIN_EMAIL
    depends_on:
      mongosetup:
        condition: service_completed_successfully
  devicehub-app:
    <<: *devicehub
    command: >
      stf app --port 3000
        --auth-url ${STF_URL}/auth/mock/
        --websocket-url ${STF_URL}/
        --secret=${STF_SECRET}
    depends_on:
      devicehub-migrate:
        condition: service_completed_successfully
    restart: unless-stopped
  devicehub-auth:
    <<: *devicehub
    command: >
      stf auth-oauth2 --port 3000
        --app-url ${STF_URL}
        --secret=${STF_SECRET}
        --oauth-client-id ${HUB_OAUTH2_CLIENT_ID}
        --oauth-client-secret ${HUB_OAUTH2_SECERT}
        --oauth-authorization-url https://github.com/login/oauth/authorize
        --oauth-token-url https://github.com/login/oauth/access_token
        --oauth-userinfo-url https://api.github.com/user
        --oauth-callback-url ${STF_URL}/auth/oauth/callback
        --oauth-scope email
    depends_on:
      devicehub-migrate:
        condition: service_completed_successfully
    restart: unless-stopped
  devicehub-processor001:
    <<: *devicehub
    command: >
      stf processor --name proc001
        --connect-app-dealer tcp://devicehub-triproxy-app:7160
        --connect-dev-dealer tcp://devicehub-triproxy-dev:7260
    depends_on:
      devicehub-migrate:
        condition: service_completed_successfully
    restart: unless-stopped
  devicehub-reaper:
    <<: *devicehub
    command: >
      stf reaper --name reaper001
        --connect-push tcp://devicehub-triproxy-dev:7270
        --connect-sub tcp://devicehub-triproxy-app:7150
        --heartbeat-timeout 30000
    depends_on:
      devicehub-migrate:
        condition: service_completed_successfully
    restart: unless-stopped
  devicehub-storage-plugin-apk:
    <<: *devicehub
    command: >
      stf storage-plugin-apk
        --port 3000
        --storage-url ${STF_URL}/
        --secret=${STF_SECRET}
    depends_on:
      devicehub-migrate:
        condition: service_completed_successfully
    restart: unless-stopped
  devicehub-storage-plugin-image:
    <<: *devicehub
    command: >
      stf storage-plugin-image --port 3000
        --storage-url ${STF_URL}/
        --secret=${STF_SECRET}
    depends_on:
      devicehub-migrate:
        condition: service_completed_successfully
    restart: unless-stopped
  devicehub-storage-temp:
    <<: *devicehub
    command: >
      stf storage-temp --port 3000
        --save-dir /data
        --connect-sub tcp://devicehub-triproxy-app:7150
        --connect-push tcp://devicehub-triproxy-app:7170
        --secret=${STF_SECRET}
    depends_on:
      devicehub-migrate:
        condition: service_completed_successfully
    restart: unless-stopped
  devicehub-triproxy-app:
    <<: *devicehub
    command: >
      stf triproxy app001
        --bind-pub "tcp://*:7150"
        --bind-dealer "tcp://*:7160"
        --bind-pull "tcp://*:7170"
    ports:
      - "17150:7150"
      - "17160:7160"
      - "17170:7170"
    depends_on:
      devicehub-migrate:
        condition: service_completed_successfully
    restart: unless-stopped
  devicehub-triproxy-dev:
    <<: *devicehub
    command: >
      stf triproxy --name dev001
        --bind-pub "tcp://*:7250"
        --bind-dealer "tcp://*:7260"
        --bind-pull "tcp://*:7270"
    ports:
      - "17250:7250"
      - "17260:7260"
      - "17270:7270"
    depends_on:
      devicehub-migrate:
        condition: service_completed_successfully
    restart: unless-stopped
  devicehub-websocket:
    <<: *devicehub
    command: >
      stf websocket --port 3000
        --storage-url ${STF_URL}/
        --connect-sub tcp://devicehub-triproxy-app:7150
        --connect-push tcp://devicehub-triproxy-app:7170
        --secret=${STF_SECRET}
    depends_on:
      devicehub-migrate:
        condition: service_completed_successfully
    restart: unless-stopped
  devicehub-api:
    <<: *devicehub
    command: >
      stf api --port 3000
        --connect-sub tcp://devicehub-triproxy-app:7150
        --connect-push tcp://devicehub-triproxy-app:7170
        --connect-sub-dev tcp://devicehub-triproxy-dev:7250
        --connect-push-dev tcp://devicehub-triproxy-dev:7270
        --secret=${STF_SECRET}
    depends_on:
      devicehub-migrate:
        condition: service_completed_successfully
    restart: unless-stopped
  devicehub-api-groups-engine:
    <<: *devicehub
    command: >
      stf groups-engine
        --connect-sub tcp://devicehub-triproxy-app:7150
        --connect-push tcp://devicehub-triproxy-app:7170
        --connect-sub-dev tcp://devicehub-triproxy-dev:7250
        --connect-push-dev tcp://devicehub-triproxy-dev:7270
    depends_on:
      devicehub-migrate:
        condition: service_completed_successfully
    restart: unless-stopped
  devicehub-swagger:
    image: swaggerapi/swagger-ui:latest
    environment:
      URLS_PRIMARY_NAME: agent
      URLS: |
        [{ url: '${STF_URL}/api/v1/scheme', name: 'agent' }]
    restart: unless-stopped
    depends_on:
      devicehub-migrate:
        condition: service_completed_successfully

volumes:
  devicehub-db-volume:
